CREATE TABLE CONTINENT (
	ID INT,
	name VARCHAR(100) NOT NULL,
	PRIMARY KEY(ID)	 
);

CREATE TABLE COUNTRY (
	ID INT,
	name VARCHAR(100) NOT NULL,
	continent INT NOT NULL,
	PRIMARY KEY (ID),
	FOREIGN KEY (continent) REFERENCES CONTINENT ON UPDATE CASCADE
);

CREATE TABLE CITY (
	ID INT,
	name VARCHAR(100) NOT NULL,
	country INT NOT NULL,
	PRIMARY KEY (ID),
	FOREIGN KEY (country) REFERENCES COUNTRY ON UPDATE CASCADE
);

CREATE TABLE UNIVERSITY (
	ID INT,
	name VARCHAR(150) NOT NULL,
	locatedIn INT NOT NULL,
	PRIMARY KEY (ID),
	FOREIGN KEY (locatedIn) REFERENCES CITY ON UPDATE CASCADE
);

CREATE TABLE COMPANY (
	ID INT,
	name VARCHAR(150) NOT NULL,
	locatedIn INT NOT NULL,
	PRIMARY KEY (ID),
	FOREIGN KEY (locatedIn) REFERENCES COUNTRY ON UPDATE CASCADE
);

CREATE TABLE PERSON (
	PID BIGINT,
	creationDate TIMESTAMP NOT NULL,
	firstName VARCHAR(50) NOT NULL,
	lastName VARCHAR(50) NOT NULL,
	gender VARCHAR (30),
	birthday BIRTHDATE,
	browserUsed VARCHAR (50),
	locationIP INET NOT NULL,
	locatedIn INT NOT NULL,
	PRIMARY KEY (PID),
	FOREIGN KEY (locatedIn) REFERENCES CITY ON UPDATE CASCADE
);

CREATE TABLE EMAIL (
	address MAILADDRESS,
	owner BIGINT NOT NULL,
	PRIMARY KEY (address),
	FOREIGN KEY (owner) REFERENCES PERSON 
		ON DELETE CASCADE
		ON UPDATE CASCADE
);

CREATE TABLE LANGUAGE (
	ISOcode CHAR(2),
	speaker BIGINT,
	PRIMARY KEY (ISOcode, speaker),
	FOREIGN KEY (speaker) REFERENCES PERSON 
		ON DELETE CASCADE
		ON UPDATE CASCADE
);

CREATE TABLE FORUM (
	ID BIGINT,
	title VARCHAR(100),
	creationDate TIMESTAMP NOT NULL,
	moderator BIGINT NOT NULL,
	PRIMARY KEY (ID),
	FOREIGN KEY (moderator) REFERENCES PERSON ON UPDATE CASCADE
);

CREATE TABLE TAG (
	ID INT, 
	name VARCHAR(100) UNIQUE NOT NULL,
	PRIMARY KEY (ID)
);

CREATE TABLE TAGCLASS (
	ID INT,
	name VARCHAR(50) UNIQUE NOT NULL,
	PRIMARY KEY (ID)
);

CREATE TABLE POST (
	ID BIGINT,
	creationDate TIMESTAMP NOT NULL,
	browserUsed VARCHAR(50),
	locationIP INET NOT NULL,
	content TEXT,
	length INT,
	creator BIGINT NOT NULL,
	locatedIn INT NOT NULL,
	imageFile VARCHAR(200),
	language CHAR(2),
	forum BIGINT NOT NULL,
	PRIMARY KEY (ID),
	FOREIGN KEY (creator) REFERENCES PERSON 
		ON DELETE CASCADE,
	FOREIGN KEY (locatedIn) REFERENCES COUNTRY,
	FOREIGN KEY (forum) REFERENCES FORUM 
		ON DELETE CASCADE
		ON UPDATE CASCADE
);

CREATE TABLE COMMENT (
	ID BIGINT,
	creationDate TIMESTAMP NOT NULL,
	browserUsed VARCHAR(50),
	locationIP INET NOT NULL,
	content TEXT,
	length INT,
	creator BIGINT NOT NULL,
	locatedIn INT NOT NULL,
	replyOfPost BIGINT,
	replyOfComment BIGINT,
	PRIMARY KEY (ID),
	FOREIGN KEY (creator) REFERENCES PERSON 
		ON DELETE CASCADE,
	FOREIGN KEY (locatedIn) REFERENCES COUNTRY,
	FOREIGN KEY (replyOfPost) REFERENCES POST 
		ON DELETE CASCADE
		ON UPDATE CASCADE,
	FOREIGN KEY (replyOfComment) REFERENCES COMMENT 
		ON DELETE CASCADE
		ON UPDATE CASCADE
);

CREATE TABLE KNOWS (
	PID BIGINT,
	knows BIGINT,
	creationDate TIMESTAMP NOT NULL,
	PRIMARY KEY (PID, knows),
	FOREIGN KEY (PID) REFERENCES PERSON 
		ON DELETE CASCADE
		ON UPDATE CASCADE,
	FOREIGN KEY (knows) REFERENCES PERSON 
		ON DELETE CASCADE
		ON UPDATE CASCADE
);

CREATE TABLE STUDYAT (
	PID BIGINT,
	university INT,
	classYear INT,
	PRIMARY KEY (PID, university),
	FOREIGN KEY (PID) REFERENCES PERSON 
		ON DELETE CASCADE
		ON UPDATE CASCADE,
	FOREIGN KEY (university) REFERENCES UNIVERSITY 
		ON DELETE CASCADE
		ON UPDATE CASCADE
);

CREATE TABLE WORKAT (
	PID BIGINT,
	company INT,
	workFrom INT,
	PRIMARY KEY (PID, company),
	FOREIGN KEY (PID) REFERENCES PERSON 
		ON DELETE CASCADE
		ON UPDATE CASCADE,
	FOREIGN KEY (company) REFERENCES COMPANY 
		ON DELETE CASCADE
		ON UPDATE CASCADE
);

CREATE TABLE INTEREST (
	PID BIGINT,
	tag INT,
	PRIMARY KEY (PID, tag),
	FOREIGN KEY (PID) REFERENCES PERSON 
		ON DELETE CASCADE
		ON UPDATE CASCADE,
	FOREIGN KEY (tag) REFERENCES TAG 
		ON DELETE CASCADE
		ON UPDATE CASCADE
);

CREATE TABLE FORUMMEMBER (
	PID BIGINT,
	forum BIGINT,
	joinDate TIMESTAMP NOT NULL,
	PRIMARY KEY (PID, forum),
	FOREIGN KEY (PID) REFERENCES PERSON
		ON DELETE CASCADE
		ON UPDATE CASCADE,
	FOREIGN KEY (forum) REFERENCES FORUM
		ON DELETE CASCADE
		ON UPDATE CASCADE
);

CREATE TABLE FORUMTAG (
	forum BIGINT,
	tag INT,
	PRIMARY KEY (forum, tag),
	FOREIGN KEY (forum) REFERENCES FORUM
		ON DELETE CASCADE
		ON UPDATE CASCADE,
	FOREIGN KEY (tag) REFERENCES TAG 
		ON DELETE CASCADE
		ON UPDATE CASCADE
);

CREATE TABLE COMMENTTAG (
	comment BIGINT,
	tag INT,
	PRIMARY KEY (comment, tag),
	FOREIGN KEY (comment) REFERENCES COMMENT 
		ON DELETE CASCADE
		ON UPDATE CASCADE,
	FOREIGN KEY (tag) REFERENCES TAG 
		ON DELETE CASCADE
		ON UPDATE CASCADE
);

CREATE TABLE POSTTAG (
	post BIGINT,
	tag INT,
	PRIMARY KEY (post, tag),
	FOREIGN KEY (post) REFERENCES POST 
		ON DELETE CASCADE
		ON UPDATE CASCADE,
	FOREIGN KEY (tag) REFERENCES TAG 
		ON DELETE CASCADE
		ON UPDATE CASCADE
);

CREATE TABLE TAGTYPE (
	tag INT,
	hasType INT,
	PRIMARY KEY (tag, hasType),
	FOREIGN KEY (tag) REFERENCES TAG 
		ON DELETE CASCADE
		ON UPDATE CASCADE,
	FOREIGN KEY (hasType) REFERENCES TAGCLASS 
		ON DELETE CASCADE
		ON UPDATE CASCADE
);

CREATE TABLE TAGCLASSTYPE (
	tagClass INT,
	hasType INT,
	PRIMARY KEY (tagClass, hasType),
	FOREIGN KEY (tagClass) REFERENCES TAGCLASS 
		ON DELETE CASCADE
		ON UPDATE CASCADE,
	FOREIGN KEY (hasType) REFERENCES TAGCLASS 
		ON DELETE CASCADE
		ON UPDATE CASCADE
);

CREATE TABLE COMMENTLIKES (
	PID BIGINT,
	comment BIGINT,
	creationDate TIMESTAMP NOT NULL,
	PRIMARY KEY (PID, comment),
	FOREIGN KEY (PID) REFERENCES PERSON 
		ON DELETE CASCADE
		ON UPDATE CASCADE,
	FOREIGN KEY (comment) REFERENCES COMMENT 
		ON DELETE CASCADE
		ON UPDATE CASCADE
);

CREATE TABLE POSTLIKES (
	PID BIGINT,
	post BIGINT,
	creationDate TIMESTAMP NOT NULL,
	PRIMARY KEY (PID, post),
	FOREIGN KEY (PID) REFERENCES PERSON 
		ON DELETE CASCADE
		ON UPDATE CASCADE,
	FOREIGN KEY (post) REFERENCES POST 
		ON DELETE CASCADE
		ON UPDATE CASCADE
);